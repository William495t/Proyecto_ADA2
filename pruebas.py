from funcionalidad import solucion

def pruebas():

    print("Prueba 1: Caso básico")
    poblacion_1 = [
        [4, 0, 1, 1, 2],
        [0, 3, 1, 6, 2],
        [1, 1, 20, 20, 0],
        [0, 0, 15, 18, 0],
        [5, 7, 9, 1, 2]
    ]
    empresarial_1 = [
        [0, 0, 1, 1, 2],
        [1, 10, 2, 2, 4],
        [1, 21, 23, 4, 4],
        [1, 15, 18, 4, 4],
        [5, 9, 4, 4, 4]
    ]
    ubicaciones_existentes_1 = [(1, 1), (2, 2)]
    n_sedes_1 = 2
    print(solucion(poblacion_1, empresarial_1, ubicaciones_existentes_1, n_sedes_1))

    print("\nPrueba 2: Matriz grande")
    poblacion_2 = [
        [10, 0, 5, 1, 1, 2],
        [0, 3, 2, 6, 2, 1],
        [1, 1, 25, 20, 0, 3],
        [0, 0, 15, 18, 0, 2],
        [5, 7, 10, 1, 2, 1],
        [6, 8, 12, 2, 1, 4]
    ]
    empresarial_2 = [
        [0, 0, 1, 1, 2, 1],
        [1, 10, 2, 2, 4, 2],
        [1, 21, 30, 4, 4, 1],
        [1, 15, 18, 4, 4, 0],
        [5, 9, 5, 4, 4, 2],
        [5, 8, 6, 2, 2, 3]
    ]
    ubicaciones_existentes_2 = [(1, 1), (3, 3)]
    n_sedes_2 = 3
    print(solucion(poblacion_2, empresarial_2, ubicaciones_existentes_2, n_sedes_2))

    print("\nPrueba 3: Restricciones estrictas")
    poblacion_3 = [
        [1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 25, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 1]
    ]
    empresarial_3 = [
        [1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 20, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 1]
    ]
    ubicaciones_existentes_3 = [(2, 2)]
    n_sedes_3 = 1
    print(solucion(poblacion_3, empresarial_3, ubicaciones_existentes_3, n_sedes_3))

    print("\nPrueba 4: Matriz compleja y específica")
    poblacion_4 = [
        [4, 0, 1, 1, 2, 2, 0, 0, 4, 15, 15, 4, 11, 2, 1],
        [4, 0, 3, 1, 6, 2, 0, 0, 4, 15, 15, 4, 8, 2, 1],
        [4, 0, 3, 1, 6, 2, 0, 0, 4, 9, 9, 4, 2, 2, 2],
        [0, 0, 1, 1, 21, 23, 4, 4, 4, 16, 16, 4, 2, 2, 2],
        [0, 0, 1, 1, 20, 20, 0, 4, 4, 16, 16, 4, 4, 2, 2],
        [0, 0, 1, 1, 15, 18, 0, 4, 4, 5, 5, 4, 2, 8, 2],
        [0, 0, 1, 1, 2, 2, 4, 0, 4, 16, 16, 4, 2, 7, 1],
        [5, 7, 3, 1, 2, 2, 4, 4, 4, 16, 16, 4, 2, 2, 1],
        [5, 7, 3, 1, 2, 2, 2, 2, 4, 5, 5, 1, 2, 2, 2],
        [5, 7, 9, 1, 2, 2, 14, 14, 14, 16, 16, 4, 2, 2, 2],
        [0, 0, 1, 1, 2, 2, 34, 34, 34, 11, 20, 5, 6, 14, 2],
        [0, 0, 1, 1, 2, 25, 34, 34, 4, 16, 16, 4, 1, 2, 2],
        [0, 0, 4, 1, 2, 25, 34, 34, 4, 16, 16, 4, 2, 2, 2],
        [0, 0, 4, 1, 2, 25, 34, 34, 4, 16, 16, 4, 3, 3, 2],
        [0, 0, 1, 1, 2, 2, 4, 4, 4, 16, 16, 4, 2, 8, 8]
    ]
    empresarial_4 = [
        [0, 0, 1, 1, 2, 2, 4, 13, 4, 16, 16, 4, 2, 6, 2],
        [0, 0, 1, 1, 2, 2, 4, 13, 4, 16, 16, 4, 2, 6, 2],
        [0, 0, 1, 10, 2, 2, 4, 4, 4, 16, 16, 4, 2, 2, 2],
        [0, 0, 1, 1, 21, 23, 4, 4, 4, 16, 16, 4, 2, 2, 2],
        [0, 0, 1, 1, 20, 20, 4, 4, 4, 16, 16, 4, 4, 5, 2],
        [0, 0, 1, 1, 15, 18, 4, 4, 4, 16, 16, 4, 4, 5, 2],
        [0, 0, 1, 1, 2, 9, 4, 4, 4, 16, 16, 4, 2, 2, 2],
        [18, 18, 1, 1, 9, 2, 11, 4, 4, 16, 16, 4, 2, 2, 2],
        [35, 18, 1, 1, 2, 2, 12, 4, 4, 16, 16, 4, 6, 2, 2],
        [18, 18, 10, 1, 8, 2, 4, 4, 4, 16, 16, 4, 2, 2, 2],
        [0, 0, 1, 1, 2, 2, 4, 4, 4, 16, 16, 4, 2, 14, 2],
        [0, 0, 9, 1, 2, 25, 34, 50, 4, 16, 16, 4, 13, 2, 2],
        [0, 0, 9, 1, 2, 25, 44, 34, 4, 16, 16, 4, 2, 9, 2],
        [0, 0, 1, 1, 5, 25, 34, 34, 4, 16, 16, 4, 2, 9, 2],
        [0, 0, 1, 1, 5, 2, 4, 4, 4, 16, 16, 4, 2, 18, 18]
    ]
    ubicaciones_existentes_4 = [(0, 0), (1, 1)]
    n_sedes_4 = 2
    print(solucion(poblacion_4, empresarial_4, ubicaciones_existentes_4, n_sedes_4))

if __name__ == "__main__":
      # Importa la función solucion desde el archivo principal
    pruebas()
